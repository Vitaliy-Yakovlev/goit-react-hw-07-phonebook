{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Heading/Heading.module.css","redux/contacts-actions.js","components/Form/Form.js","redux/contacts-selectors.js","components/Contacts/Contacts.js","components/Filter/Filter.js","components/Heading/Heading.js","components/Container/Container.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","filterContact","Form","useState","setName","setNumber","dispatch","useDispatch","handleInputChange","event","currentTarget","value","reset","className","s","form","onSubmit","preventDefault","contactsActions","label","input","onChange","type","pattern","title","required","btn","getValue","state","contacts","filter","getVisibleContacts","allContacts","items","getAllContacts","normalizedFilter","getFilter","toLowerCase","contact","includes","Contacts","useSelector","list","map","item","onClick","Filter","e","target","Heading","text","Container","children","container","Phonebook","autoClose","itemsReducer","createReducer","action","length","toast","error","filterReducer","_state","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.53e3ddf2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__11zNb\",\"item\":\"Contacts_item__359C2\",\"btn\":\"Contacts_btn__1Fxd-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2HiFu\",\"input\":\"Filter_input__1c7IH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2-qv-\",\"title\":\"Container_title__2N7r-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Heading_title__2LTU2\"};","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add', ({ name, number }) => ({\n  payload: {\n    name,\n    id: shortid.generate(),\n    number,\n  },\n}));\nexport const deleteContact = createAction('contacts/delete');\nexport const filterContact = createAction('contacts/changeFilter');\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as contactsActions from '../../redux/contacts-actions';\nimport s from './Form.module.css';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const onSubmit = ({ name, number }) =>\n    dispatch(contactsActions.addContact({ name, number }));\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit({ name, number });\n\n    reset();\n  };\n\n  const reset = () => {\n    setNumber('');\n    setName('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          value={name}\n          onChange={handleInputChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            value={number}\n            onChange={handleInputChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={s.btn} type=\"submit\">\n          Add contact\n        </button>\n      </label>\n    </form>\n  );\n}\n","export const getValue = state => state.contacts.filter;\nexport const getAllContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const allContacts = getAllContacts(state);\n  const filter = getFilter(state);\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as contactsActions from '../../redux/contacts-actions';\nimport { getVisibleContacts } from '../../redux/contacts-selectors';\nimport s from './Contacts.module.css';\n\nexport default function Contacts() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onClick = id => dispatch(contactsActions.deleteContact(id));\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ name, id, number }) => {\n        return (\n          <li className={s.item} key={id}>\n            {name}: {number}\n            <button className={s.btn} type=\"button\" onClick={() => onClick(id)}>\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  filter: PropTypes.string,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as contactsActions from '../../redux/contacts-actions';\nimport { getValue } from '../../redux/contacts-selectors';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const value = useSelector(getValue);\n  const dispatch = useDispatch();\n\n  const onChangeFilter = e =>\n    dispatch(contactsActions.filterContact(e.target.value));\n\n  return (\n    <label className={s.label}>\n      Find contact by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChangeFilter}\n      />\n    </label>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Heading.module.css';\n\nconst Heading = ({ text }) => <h2 className={s.title}>{text}</h2>;\n\nHeading.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Heading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <>\n    <h1 className={s.title}>React. Home Work 6 - Phonebook</h1>\n    <div className={s.container}>{children}</div>\n  </>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport Form from './components/Form';\nimport Contacts from './components/Contacts';\nimport Filter from './components/Filter';\nimport Heading from './components/Heading';\nimport Container from './components/Container';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function Phonebook() {\n  return (\n    <>\n      <Container>\n        <Heading text=\"Phonebook\" />\n        <Form />\n        <ToastContainer autoClose={5000} />\n        <Heading text=\"Contacts\" />\n        <Filter />\n        <Contacts />\n      </Container>\n    </>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport * as action from './contacts-actions';\n\nconst itemsReducer = createReducer([], {\n  [action.addContact]: (state, { payload }) => {\n    const errorName = state.filter(\n      contact => contact.name.toLowerCase() === payload.name.toLowerCase(),\n    );\n\n    if (errorName.length) {\n      toast.error(`${payload.name} is already in contacts`);\n      return state;\n    } else {\n      return [...state, payload];\n    }\n  },\n\n  [action.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [action.filterContact]: (_state, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n// export const store = createStore(rootReducer, composeWithDevTools());\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={'loading...'} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Form_label__63qKD\",\"input\":\"Form_input__2oo7f\",\"btn\":\"Form_btn__3xe8Y\"};"],"sourceRoot":""}