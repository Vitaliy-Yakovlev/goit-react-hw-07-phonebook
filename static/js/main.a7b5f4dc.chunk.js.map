{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Heading/Heading.module.css","components/Form/Form.module.css","redux/contacts-actions.js","redux/contacts-operations.js","redux/contacts-selectors.js","components/Form/Form.js","components/Contacts/Contacts.js","components/Filter/Filter.js","components/Heading/Heading.js","components/Container/Container.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","filterContact","axios","defaults","baseURL","getFilter","state","contacts","filter","getLoading","loading","getError","error","getVisibleContacts","allContacts","items","getAllContacts","normalizedFilter","toLowerCase","contact","name","includes","Form","useState","setName","number","setNumber","nameItems","useSelector","map","console","log","dispatch","useDispatch","onSubmit","id","shortid","generate","post","then","data","catch","message","addContact","handleInputChange","event","currentTarget","value","reset","className","s","form","preventDefault","join","toast","label","input","onChange","type","pattern","title","required","btn","Contacts","loader","useEffect","a","get","color","onClick","delete","deleteContact","list","item","Filter","e","contactsActions","target","Heading","text","Container","children","container","Phonebook","autoClose","itemReducer","createReducer","_","payload","loadingReducer","filterReducer","errorReducer","contactsReducer","combineReducers","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7b5f4dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__11zNb\",\"item\":\"Contacts_item__359C2\",\"btn\":\"Contacts_btn__1Fxd-\",\"loader\":\"Contacts_loader__SqZZx\",\"error\":\"Contacts_error__cgO1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2HiFu\",\"input\":\"Filter_input__1c7IH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2-qv-\",\"title\":\"Container_title__2N7r-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Heading_title__2LTU2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Form_label__63qKD\",\"input\":\"Form_input__2oo7f\",\"btn\":\"Form_btn__3xe8Y\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const getContactsRequest = createAction('getContactsRequest');\nexport const getContactsSuccess = createAction('getAddContactsSuccess');\nexport const getContactsError = createAction('getContactsError');\n\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\nexport const addContactsError = createAction('contacts/addContactsError');\n\nexport const deleteContactsRequest = createAction(\n  'contacts/deleteContactsRequest',\n);\nexport const deleteContactsSuccess = createAction(\n  'contacts/deleteContactsSuccess',\n);\nexport const deleteContactsError = createAction('contacts/deleteContactsError');\n\nexport const filterContact = createAction('contacts/changeFilter');\n","import axios from 'axios';\nimport shortid from 'shortid';\nimport {\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:3030';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(getContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(getContactsSuccess(data)))\n    .catch(error => dispatch(getContactsError(error.message)));\n};\n\nexport const addContact =\n  ({ name, number }) =>\n  dispatch => {\n    const contact = {\n      name,\n      id: shortid.generate(),\n      number,\n    };\n\n    dispatch(addContactsRequest());\n\n    axios\n      .post('/contacts', contact)\n      .then(({ data }) => dispatch(addContactsSuccess(data)))\n      .catch(error => dispatch(addContactsError(error.message)));\n  };\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteContactsRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactsSuccess(id)))\n    .catch(error => dispatch(deleteContactsError(error.message)));\n};\n","export const getAllContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getLoading = state => state.contacts.loading;\nexport const getError = state => state.contacts.error;\n\nexport const getVisibleContacts = state => {\n  const allContacts = getAllContacts(state);\n  const filter = getFilter(state);\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { addContact } from '../../redux/contacts-operations';\nimport { getError } from '../../redux/contacts-selectors';\nimport s from './Form.module.css';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameItems = useSelector(state =>\n    state.contacts.items.map(contact => contact.name),\n  );\n\n  console.log(nameItems);\n  const error = useSelector(getError);\n\n  const dispatch = useDispatch();\n\n  const onSubmit = ({ name, number }) => dispatch(addContact({ name, number }));\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (nameItems.join('').toLowerCase().includes(name.toLowerCase())) {\n      toast.error(`${name} is already in contacts`);\n      reset();\n      return;\n    }\n\n    if (error) {\n      return;\n    }\n\n    onSubmit({ name, number });\n\n    reset();\n  };\n\n  const reset = () => {\n    setNumber('');\n    setName('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          value={name}\n          onChange={handleInputChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            value={number}\n            onChange={handleInputChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={s.btn} type=\"submit\">\n          Add contact\n        </button>\n      </label>\n    </form>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { AiTwotoneDelete } from 'react-icons/ai';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Loader from 'react-loader-spinner';\nimport { deleteContact, fetchContacts } from '../../redux/contacts-operations';\nimport {\n  getVisibleContacts,\n  getError,\n  getLoading,\n} from '../../redux/contacts-selectors';\nimport s from './Contacts.module.css';\n\nexport default function Contacts() {\n  const contacts = useSelector(getVisibleContacts);\n  const loader = useSelector(getLoading);\n  const error = useSelector(getError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  if (loader) {\n    return <Loader type=\"ThreeDots\" color=\"#51cde6\" className={s.loader} />;\n  }\n\n  if (error) {\n    return <h1 className={s.error}>Что-то пошло не так :(</h1>;\n  }\n\n  const onClick = id => dispatch(deleteContact(id));\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ name, id, number }) => {\n        return (\n          <li className={s.item} key={id}>\n            {name}: {number}\n            <button className={s.btn} type=\"button\" onClick={() => onClick(id)}>\n              <AiTwotoneDelete />\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  filter: PropTypes.string,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as contactsActions from '../../redux/contacts-actions';\nimport { getFilter } from '../../redux/contacts-selectors';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChangeFilter = e =>\n    dispatch(contactsActions.filterContact(e.target.value));\n\n  return (\n    <label className={s.label}>\n      Find contact by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChangeFilter}\n      />\n    </label>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Heading.module.css';\n\nconst Heading = ({ text }) => <h2 className={s.title}>{text}</h2>;\n\nHeading.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Heading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <>\n    <h1 className={s.title}>React. Home Work 7 - Phonebook</h1>\n    <div className={s.container}>{children}</div>\n  </>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport Form from './components/Form';\nimport Contacts from './components/Contacts';\nimport Filter from './components/Filter';\nimport Heading from './components/Heading';\nimport Container from './components/Container';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function Phonebook() {\n  return (\n    <>\n      <Container>\n        <Heading text=\"Phonebook\" />\n        <Form />\n        <ToastContainer autoClose={5000} />\n        <Heading text=\"Contacts\" />\n        <Filter />\n        <Contacts />\n      </Container>\n    </>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n  filterContact,\n} from './contacts-actions';\n\nconst itemReducer = createReducer([], {\n  [getContactsSuccess]: (_, { payload }) => payload,\n  [addContactsSuccess]: (state, { payload }) => {\n    return [...state, payload];\n  },\n  [deleteContactsSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loadingReducer = createReducer(false, {\n  [getContactsRequest]: () => true,\n  [getContactsSuccess]: () => false,\n  [getContactsError]: () => false,\n  [addContactsRequest]: () => true,\n  [addContactsSuccess]: () => false,\n  [addContactsError]: () => false,\n  [deleteContactsRequest]: () => true,\n  [deleteContactsSuccess]: () => false,\n  [deleteContactsError]: () => false,\n});\n\nconst filterReducer = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nconst errorReducer = createReducer(null, {\n  [getContactsError]: (_, { payload }) => payload,\n  [getContactsSuccess]: () => null,\n  [addContactsError]: (_, { payload }) => payload,\n  [addContactsRequest]: () => null,\n  [deleteContactsError]: (_, { payload }) => payload,\n  [deleteContactsRequest]: () => null,\n});\n\nconst contactsReducer = combineReducers({\n  items: itemReducer,\n  filter: filterReducer,\n  loading: loadingReducer,\n  error: errorReducer,\n});\n\nexport default contactsReducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts-reducer';\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}