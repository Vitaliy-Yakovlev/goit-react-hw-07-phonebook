{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Heading/Heading.module.css","redux/contacts-actions.js","components/Form/Form.js","components/Contacts/Contacts.js","components/Filter/Filter.js","components/Heading/Heading.js","components/Container/Container.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","filterContact","connect","dispatch","onSubmit","contactsActions","useState","setName","setNumber","handleInputChange","event","currentTarget","value","reset","className","s","form","preventDefault","label","input","onChange","type","pattern","title","required","btn","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","contact","includes","contacts","items","onClick","list","map","item","state","onChangeFilter","e","target","Heading","text","Container","children","container","Phonebook","autoClose","itemsReducer","createReducer","action","length","toast","error","filterReducer","_state","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c109c2a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__11zNb\",\"item\":\"Contacts_item__359C2\",\"btn\":\"Contacts_btn__1Fxd-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2HiFu\",\"input\":\"Filter_input__1c7IH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2-qv-\",\"title\":\"Container_title__2N7r-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Heading_title__2LTU2\"};","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n// import * as actionTypes from './contacts-types';\n\nexport const addContact = createAction('contacts/add', ({ name, number }) => ({\n  payload: {\n    name,\n    id: shortid.generate(),\n    number,\n  },\n}));\nexport const deleteContact = createAction('contacts/delete');\nexport const filterContact = createAction('contacts/changeFilter');\n\n// export const addContact = ({ name, number }) => ({\n//   type: actionTypes.ADD,\n//   payload: {\n//     name,\n//     id: shortid.generate(),\n//     number,\n//   },\n// });\n\n// export const deleteContact = contactId => ({\n//   type: actionTypes.DELETE,\n//   payload: contactId,\n// });\n\n// export const filterContact = value => ({\n//   type: actionTypes.CHANGE_FILTER,\n//   payload: value,\n// });\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport * as contactsActions from '../../redux/contacts-actions';\nimport s from './Form.module.css';\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit({ name, number });\n\n    reset();\n  };\n\n  const reset = () => {\n    setNumber('');\n    setName('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          value={name}\n          onChange={handleInputChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            value={number}\n            onChange={handleInputChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={s.btn} type=\"submit\">\n          Add contact\n        </button>\n      </label>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ name, number }) =>\n    dispatch(contactsActions.addContact({ name, number })),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as contactsActions from '../../redux/contacts-actions';\nimport s from './Contacts.module.css';\n\nconst Contacts = ({ contacts, onClick }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ name, id, number }) => {\n        return (\n          <li className={s.item} key={id}>\n            {name}: {number}\n            <button className={s.btn} type=\"button\" onClick={() => onClick(id)}>\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: id => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as contactsActions from '../../redux/contacts-actions';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <label className={s.label}>\n      Find contact by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChangeFilter}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: e => dispatch(contactsActions.filterContact(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Heading.module.css';\n\nconst Heading = ({ text }) => <h2 className={s.title}>{text}</h2>;\n\nHeading.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Heading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <>\n    <h1 className={s.title}>React. Home Work 6 - Phonebook</h1>\n    <div className={s.container}>{children}</div>\n  </>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport Form from './components/Form';\nimport Contacts from './components/Contacts';\nimport Filter from './components/Filter';\nimport Heading from './components/Heading';\nimport Container from './components/Container';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function Phonebook() {\n  return (\n    <>\n      <Container>\n        <Heading text=\"Phonebook\" />\n        <Form />\n        <ToastContainer autoClose={5000} />\n        <Heading text=\"Contacts\" />\n        <Filter />\n        <Contacts />\n      </Container>\n    </>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport * as action from './contacts-actions';\n// import * as actionTypes from './contacts-types';\n\nconst itemsReducer = createReducer([], {\n  [action.addContact]: (state, { payload }) => {\n    const errorName = state.filter(\n      contact => contact.name.toLowerCase() === payload.name.toLowerCase(),\n    );\n\n    if (errorName.length) {\n      toast.error(`${payload.name} is already in contacts`);\n      return state;\n    } else {\n      return [...state, payload];\n    }\n  },\n\n  [action.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [action.filterContact]: (_state, { payload }) => payload,\n});\n\n// const itemsReducer = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.ADD:\n//       const errorName = state.filter(\n//         contact => contact.name.toLowerCase() === payload.name.toLowerCase(),\n//       );\n\n//       if (errorName.length) {\n//         toast.error(`${payload.name} is already in contacts`);\n//         return state;\n//       } else {\n//         return [...state, payload];\n//       }\n\n//     case actionTypes.DELETE:\n//       return state.filter(({ id }) => id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filterReducer = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.CHANGE_FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n// export const store = createStore(rootReducer, composeWithDevTools());\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={'loading...'} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Form_label__63qKD\",\"input\":\"Form_input__2oo7f\",\"btn\":\"Form_btn__3xe8Y\"};"],"sourceRoot":""}